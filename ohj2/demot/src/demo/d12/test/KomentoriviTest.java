package demo.d12.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import static demo.d12.Komentorivi.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.07.26 15:24:01 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class KomentoriviTest {



  // Generated by ComTest BEGIN
  /** testYnnaa30 */
  @Test
  public void testYnnaa30() {    // Komentorivi: 30
    Ynnaa ynnaa = new Ynnaa(); 
    assertEquals("From: Komentorivi line: 33", "Tulos on 15.", ynnaa.suorita("4 5 6")); 
    assertEquals("From: Komentorivi line: 34", "Tulos on 0.", ynnaa.suorita("abcd")); 
    assertEquals("From: Komentorivi line: 35", "Tulos on 11.", ynnaa.suorita("a5c6")); 
    { String _l_=ynnaa.suorita("5.6"),_r_="Tulos on 5[.,]6."; if ( !_l_.matches(_r_) ) fail("From: Komentorivi line: 36" + " does not match: ["+ _l_ + "] != [" + _r_ + "]");}; 
    assertEquals("From: Komentorivi line: 37", "Tulos on 0.", ynnaa.suorita("")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testIsoksi56 */
  @Test
  public void testIsoksi56() {    // Komentorivi: 56
    Isoksi isoksi = new Isoksi(); 
    assertEquals("From: Komentorivi line: 58", "kissa isona on KISSA", isoksi.suorita("kissa")); 
    assertEquals("From: Komentorivi line: 59", " isona on ", isoksi.suorita("")); 
    assertEquals("From: Komentorivi line: 60", "abcd5FGH isona on ABCD5FGH", isoksi.suorita("abcd5FGH")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPalindromiko73 */
  @Test
  public void testPalindromiko73() {    // Komentorivi: 73
    Palindromiko pali = new Palindromiko(); 
    assertEquals("From: Komentorivi line: 75", "Sana \"innostunut sonni\" on palindromi!", pali.suorita("innostunut sonni")); 
    assertEquals("From: Komentorivi line: 76", "Sana \"kissa\" ei ole palindromi!", pali.suorita("kissa")); 
    assertEquals("From: Komentorivi line: 77", "Sana \"'Innostunut' sonni?\" on palindromi!", pali.suorita("'Innostunut' sonni?")); 
    assertEquals("From: Komentorivi line: 78", "Sana \"\" on palindromi!", pali.suorita("")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testOnko114 */
  @Test
  public void testOnko114() {    // Komentorivi: 114
    Komento komento = new Komento("komento", s -> s); 
    assertEquals("From: Komentorivi line: 116", true, komento.onko("komento")); 
    assertEquals("From: Komentorivi line: 117", true, komento.onko("Kom")); 
    assertEquals("From: Komentorivi line: 118", true, komento.onko("K")); 
    assertEquals("From: Komentorivi line: 119", false, komento.onko("Kon")); 
    assertEquals("From: Komentorivi line: 120", false, komento.onko("")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testTulos135 */
  @Test
  public void testTulos135() {    // Komentorivi: 135
    Komento komento = new Komento("komento", s -> s.toLowerCase()); 
    assertEquals("From: Komentorivi line: 137", "kala", komento.tulos("KALA")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testTulkitse165 */
  @Test
  public void testTulkitse165() {    // Komentorivi: 165
    Komennot komennot = new Komennot(); 
    komennot.add(new Komento("pieneksi", s -> s.toLowerCase())); 
    assertEquals("From: Komentorivi line: 168", "kala", komennot.tulkitse("pieneksi KALA")); 
    assertEquals("From: Komentorivi line: 169", "En tunne komentoa ISOKSI!", komennot.tulkitse("isoksi kala"));
  } // Generated by ComTest END
}