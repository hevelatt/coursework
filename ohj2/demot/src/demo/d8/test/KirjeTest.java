package demo.d8.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import static demo.d8.Kirje.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.06.27 15:45:00 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class KirjeTest {



  // Generated by ComTest BEGIN
  /** testSuurinKirjeenPainoIf41 */
  @Test
  public void testSuurinKirjeenPainoIf41() {    // Kirje: 41
    assertEquals("From: Kirje line: 46", 2000, suurinKirjeenPainoIf(10.00), 0.000001);  
    assertEquals("From: Kirje line: 47", 1000, suurinKirjeenPainoIf(3.60), 0.000001);  
    assertEquals("From: Kirje line: 48", 1000, suurinKirjeenPainoIf(3.50), 0.000001);  
    assertEquals("From: Kirje line: 49", 500, suurinKirjeenPainoIf(3.40), 0.000001);  
    assertEquals("From: Kirje line: 50", 0, suurinKirjeenPainoIf(0.50), 0.000001);  
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSuurinKirjeenPaino72 */
  @Test
  public void testSuurinKirjeenPaino72() {    // Kirje: 72
    assertEquals("From: Kirje line: 79", 2000, suurinKirjeenPaino(10.00), 0.000001); 
    assertEquals("From: Kirje line: 79", 2000, suurinKirjeenPaino2(10.00), 0.000001); 
    assertEquals("From: Kirje line: 79", 2000, suurinKirjeenPainoIf(10.00), 0.000001);  
    assertEquals("From: Kirje line: 80", 2000, suurinKirjeenPaino(5.50), 0.000001); 
    assertEquals("From: Kirje line: 80", 2000, suurinKirjeenPaino2(5.50), 0.000001); 
    assertEquals("From: Kirje line: 80", 2000, suurinKirjeenPainoIf(5.50), 0.000001);  
    assertEquals("From: Kirje line: 81", 1000, suurinKirjeenPaino(5.49), 0.000001); 
    assertEquals("From: Kirje line: 81", 1000, suurinKirjeenPaino2(5.49), 0.000001); 
    assertEquals("From: Kirje line: 81", 1000, suurinKirjeenPainoIf(5.49), 0.000001);  
    assertEquals("From: Kirje line: 82", 1000, suurinKirjeenPaino(3.50), 0.000001); 
    assertEquals("From: Kirje line: 82", 1000, suurinKirjeenPaino2(3.50), 0.000001); 
    assertEquals("From: Kirje line: 82", 1000, suurinKirjeenPainoIf(3.50), 0.000001);  
    assertEquals("From: Kirje line: 83", 500, suurinKirjeenPaino(3.49), 0.000001); 
    assertEquals("From: Kirje line: 83", 500, suurinKirjeenPaino2(3.49), 0.000001); 
    assertEquals("From: Kirje line: 83", 500, suurinKirjeenPainoIf(3.49), 0.000001);  
    assertEquals("From: Kirje line: 84", 500, suurinKirjeenPaino(2.10), 0.000001); 
    assertEquals("From: Kirje line: 84", 500, suurinKirjeenPaino2(2.10), 0.000001); 
    assertEquals("From: Kirje line: 84", 500, suurinKirjeenPainoIf(2.10), 0.000001);  
    assertEquals("From: Kirje line: 85", 250, suurinKirjeenPaino(2.09), 0.000001); 
    assertEquals("From: Kirje line: 85", 250, suurinKirjeenPaino2(2.09), 0.000001); 
    assertEquals("From: Kirje line: 85", 250, suurinKirjeenPainoIf(2.09), 0.000001);  
    assertEquals("From: Kirje line: 86", 250, suurinKirjeenPaino(1.30), 0.000001); 
    assertEquals("From: Kirje line: 86", 250, suurinKirjeenPaino2(1.30), 0.000001); 
    assertEquals("From: Kirje line: 86", 250, suurinKirjeenPainoIf(1.30), 0.000001);  
    assertEquals("From: Kirje line: 87", 100, suurinKirjeenPaino(1.29), 0.000001); 
    assertEquals("From: Kirje line: 87", 100, suurinKirjeenPaino2(1.29), 0.000001); 
    assertEquals("From: Kirje line: 87", 100, suurinKirjeenPainoIf(1.29), 0.000001);  
    assertEquals("From: Kirje line: 88", 100, suurinKirjeenPaino(0.90), 0.000001); 
    assertEquals("From: Kirje line: 88", 100, suurinKirjeenPaino2(0.90), 0.000001); 
    assertEquals("From: Kirje line: 88", 100, suurinKirjeenPainoIf(0.90), 0.000001);  
    assertEquals("From: Kirje line: 89", 50, suurinKirjeenPaino(0.89), 0.000001); 
    assertEquals("From: Kirje line: 89", 50, suurinKirjeenPaino2(0.89), 0.000001); 
    assertEquals("From: Kirje line: 89", 50, suurinKirjeenPainoIf(0.89), 0.000001);  
    assertEquals("From: Kirje line: 90", 50, suurinKirjeenPaino(0.60), 0.000001); 
    assertEquals("From: Kirje line: 90", 50, suurinKirjeenPaino2(0.60), 0.000001); 
    assertEquals("From: Kirje line: 90", 50, suurinKirjeenPainoIf(0.60), 0.000001);  
    assertEquals("From: Kirje line: 91", 0, suurinKirjeenPaino(0.59), 0.000001); 
    assertEquals("From: Kirje line: 91", 0, suurinKirjeenPaino2(0.59), 0.000001); 
    assertEquals("From: Kirje line: 91", 0, suurinKirjeenPainoIf(0.59), 0.000001);  
    assertEquals("From: Kirje line: 92", 0, suurinKirjeenPaino(0.50), 0.000001); 
    assertEquals("From: Kirje line: 92", 0, suurinKirjeenPaino2(0.50), 0.000001); 
    assertEquals("From: Kirje line: 92", 0, suurinKirjeenPainoIf(0.50), 0.000001);  
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPostimaksu125 */
  @Test
  public void testPostimaksu125() {    // Kirje: 125
    assertEquals("From: Kirje line: 126", 0.60, postimaksu(40), 0.000001); 
    assertEquals("From: Kirje line: 127", 0.60, postimaksu(51), 0.000001); 
    assertEquals("From: Kirje line: 128", 0.90, postimaksu(100), 0.000001); 
    assertEquals("From: Kirje line: 129", 0.90, postimaksu(101), 0.000001); 
    assertEquals("From: Kirje line: 130", 5.50, postimaksu(4000), 0.000001); 
    assertEquals("From: Kirje line: 131", 0.60, postimaksu(-1), 0.000001); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSuurinKirjeenPaino2D149 */
  @Test
  public void testSuurinKirjeenPaino2D149() {    // Kirje: 149
    assertEquals("From: Kirje line: 154", 2000, suurinKirjeenPaino2D(10.00), 0.000001);  
    assertEquals("From: Kirje line: 155", 2000, suurinKirjeenPaino2D(5.50), 0.000001);  
    assertEquals("From: Kirje line: 156", 1000, suurinKirjeenPaino2D(5.49), 0.000001);  
    assertEquals("From: Kirje line: 157", 1000, suurinKirjeenPaino2D(3.50), 0.000001);  
    assertEquals("From: Kirje line: 158", 500, suurinKirjeenPaino2D(3.49), 0.000001);  
    assertEquals("From: Kirje line: 159", 500, suurinKirjeenPaino2D(2.10), 0.000001);  
    assertEquals("From: Kirje line: 160", 250, suurinKirjeenPaino2D(2.09), 0.000001);  
    assertEquals("From: Kirje line: 161", 250, suurinKirjeenPaino2D(1.30), 0.000001);  
    assertEquals("From: Kirje line: 162", 100, suurinKirjeenPaino2D(1.29), 0.000001);  
    assertEquals("From: Kirje line: 163", 100, suurinKirjeenPaino2D(0.90), 0.000001);  
    assertEquals("From: Kirje line: 164", 50, suurinKirjeenPaino2D(0.89), 0.000001);  
    assertEquals("From: Kirje line: 165", 50, suurinKirjeenPaino2D(0.60), 0.000001);  
    assertEquals("From: Kirje line: 166", 0, suurinKirjeenPaino2D(0.59), 0.000001);  
    assertEquals("From: Kirje line: 167", 0, suurinKirjeenPaino2D(0.50), 0.000001);  
    assertEquals("From: Kirje line: 168", 0, suurinKirjeenPaino2D(0.00), 0.000001);  
    assertEquals("From: Kirje line: 169", 0, suurinKirjeenPaino2D(-1.00), 0.000001);  
  } // Generated by ComTest END
}