package demo.d7.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import static demo.d7.Merkkijonot.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.06.26 13:01:55 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class MerkkijonotTest {



  // Generated by ComTest BEGIN
  /** testOnkoMuita61 */
  @Test
  public void testOnkoMuita61() {    // Merkkijonot: 61
    String jono = "kissa", k = "aik"; 
    assertEquals("From: Merkkijonot line: 63", true, onkoMuita(jono, k)); 
    k = "aiks"; 
    assertEquals("From: Merkkijonot line: 65", false, onkoMuita(jono, k)); 
    assertEquals("From: Merkkijonot line: 66", true, onkoMuita("", k)); 
    assertEquals("From: Merkkijonot line: 67", true, onkoMuita(jono, "")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testViimeinen81 */
  @Test
  public void testViimeinen81() {    // Merkkijonot: 81
    assertEquals("From: Merkkijonot line: 82", 3, viimeinen("kissa", 's')); 
    assertEquals("From: Merkkijonot line: 83", -1, viimeinen("kissa", 'b')); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testOnkoJoku96 */
  @Test
  public void testOnkoJoku96() {    // Merkkijonot: 96
    String jono = "kissa", k = "ibm"; 
    assertEquals("From: Merkkijonot line: 98", true, onkoJoku(jono, k)); 
    k = "pc"; 
    assertEquals("From: Merkkijonot line: 100", false, onkoJoku(jono, k)); 
    assertEquals("From: Merkkijonot line: 101", false, onkoJoku("", k)); 
    assertEquals("From: Merkkijonot line: 102", false, onkoJoku(jono, "")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testOnkoSamat2117 */
  @Test
  public void testOnkoSamat2117() {    // Merkkijonot: 117
    assertEquals("From: Merkkijonot line: 118", true, onkoSamat2("   matti   ", "Matti")); 
    assertEquals("From: Merkkijonot line: 119", true, onkoSamat2(" matti* ", "  MATTI*")); 
    assertEquals("From: Merkkijonot line: 120", true, onkoSamat2("matti.*", "Matti Nykänen")); 
    assertEquals("From: Merkkijonot line: 121", true, onkoSamat2("  matti*  ", "Matti Nykänen")); 
    assertEquals("From: Merkkijonot line: 122", true, onkoSamat2("   ", "")); 
    assertEquals("From: Merkkijonot line: 123", false, onkoSamat2(" matti   ", "")); 
    assertEquals("From: Merkkijonot line: 124", false, onkoSamat2("   ", "matti")); 
    assertEquals("From: Merkkijonot line: 125", true, onkoSamat2(" .*  ", "matti")); 
    assertEquals("From: Merkkijonot line: 126", true, onkoSamat2(" *  ", "matti")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testOnkoSamat149 */
  @Test
  public void testOnkoSamat149() {    // Merkkijonot: 149
    assertEquals("From: Merkkijonot line: 150", true, onkoSamat("Matti", "   matti   ")); 
    assertEquals("From: Merkkijonot line: 151", true, onkoSamat("MATTI*", " matti* ")); 
    assertEquals("From: Merkkijonot line: 152", true, onkoSamat("Matti Nykänen", "matti.*")); 
    assertEquals("From: Merkkijonot line: 153", true, onkoSamat("Matti Nykänen", "  matti*  ")); 
    assertEquals("From: Merkkijonot line: 154", true, onkoSamat("Matti Nykänen", "matti*nen")); 
    assertEquals("From: Merkkijonot line: 155", true, onkoSamat("Matti Nykänen", "matti*n*k*e*")); 
    assertEquals("From: Merkkijonot line: 156", true, onkoSamat("", "   ")); 
    assertEquals("From: Merkkijonot line: 157", false, onkoSamat("", " matti   ")); 
    assertEquals("From: Merkkijonot line: 158", false, onkoSamat("matti", "    ")); 
    assertEquals("From: Merkkijonot line: 159", true, onkoSamat("matti", "  .*  ")); 
    assertEquals("From: Merkkijonot line: 160", true, onkoSamat("matti", " *   ")); 
    assertEquals("From: Merkkijonot line: 161", true, onkoSamat("Matti Nykänen.", "  matti*.")); 
    assertEquals("From: Merkkijonot line: 162", false, onkoSamat("Matti Nykänen", "  matti*.")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLaskeMerkit185 */
  @Test
  public void testLaskeMerkit185() {    // Merkkijonot: 185
    assertEquals("From: Merkkijonot line: 186", 4, laskeMerkit("Kissa istuu puussa", "abcdefghij")); 
    assertEquals("From: Merkkijonot line: 187", 14, laskeMerkit("Kissa istuu puussa", "abcdefghijrstuvw")); 
    assertEquals("From: Merkkijonot line: 188", 0, laskeMerkit("Kissa istuu puussa", "bcdefgh")); 
    assertEquals("From: Merkkijonot line: 189", 0, laskeMerkit("", "bcdefgh")); 
    assertEquals("From: Merkkijonot line: 190", 0, laskeMerkit("Kissa istuu puussa", "")); 
    assertEquals("From: Merkkijonot line: 191", 14, laskeMerkit("Kissa istuu puussa", "a-jr-w"));  // tukee suoraan regex-välejä
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPalindromi204 */
  @Test
  public void testPalindromi204() {    // Merkkijonot: 204
    assertEquals("From: Merkkijonot line: 205", true, palindromi("abba")); 
    assertEquals("From: Merkkijonot line: 206", false, palindromi("apua")); 
    assertEquals("From: Merkkijonot line: 207", true, palindromi("saippuakivikauppias")); 
    assertEquals("From: Merkkijonot line: 208", true, palindromi("Kääk")); 
    assertEquals("From: Merkkijonot line: 209", false, palindromi("Kääk!"));
    assertEquals("From: Merkkijonot line: 210", true, palindromi("i")); 
    assertEquals("From: Merkkijonot line: 211", false, palindromi("")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoistaLopusta229 */
  @Test
  public void testPoistaLopusta229() {    // Merkkijonot: 229
    assertEquals("From: Merkkijonot line: 230", "Kissa is", poistaLopusta("Kissa istuu", 3)); 
    assertEquals("From: Merkkijonot line: 231", "", poistaLopusta("abc", 3)); 
    assertEquals("From: Merkkijonot line: 232", "", poistaLopusta("a", 3)); 
    assertEquals("From: Merkkijonot line: 233", "", poistaLopusta("", 3)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoistaLopusta246 */
  @Test
  public void testPoistaLopusta246() {    // Merkkijonot: 246
    StringBuilder sb = new StringBuilder("Kissa istuu"); 
    poistaLopusta(sb,3); assertEquals("From: Merkkijonot line: 248", "Kissa is", sb.toString()); 
    sb = new StringBuilder("abc"); poistaLopusta(sb, 3); assertEquals("From: Merkkijonot line: 249", "", sb.toString()); 
    sb = new StringBuilder("a"); poistaLopusta(sb, 3); assertEquals("From: Merkkijonot line: 250", "", sb.toString()); 
    sb = new StringBuilder(""); poistaLopusta(sb, 3); assertEquals("From: Merkkijonot line: 251", "", sb.toString()); 
  } // Generated by ComTest END
}