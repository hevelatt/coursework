package demo.d6.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import static demo.d6.Pvm.*;
import demo.d6.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.06.23 18:49:20 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class PvmTest {



  // Generated by ComTest BEGIN
  /** testAlusta38 */
  @Test
  public void testAlusta38() {    // Pvm: 38
    Pvm pvm = new Pvm(); 
    assertEquals("From: Pvm line: 40", "13.2.2012", pvm.toString()); 
    pvm.alusta(29, 0, 0); 
    assertEquals("From: Pvm line: 42", "29.2.2012", pvm.toString()); 
    pvm.alusta(29, 0, 2011); 
    assertEquals("From: Pvm line: 44", "29.2.2012", pvm.toString()); 
    pvm.alusta(28, 0, 2011); 
    assertEquals("From: Pvm line: 46", "28.2.2011", pvm.toString()); 
    pvm.alusta(1, 1, 3); 
    assertEquals("From: Pvm line: 48", "1.1.2003", pvm.toString()); 
    pvm.alusta(1, 1, 83); 
    assertEquals("From: Pvm line: 50", "1.1.1983", pvm.toString()); 
    pvm.alusta(1, 1, 100); 
    assertEquals("From: Pvm line: 52", "1.1.1983", pvm.toString()); 
    pvm = new Pvm(20,2,2012); 
    pvm.alusta(1,3,0); assertEquals("From: Pvm line: 54", "1.3.2012", pvm.toString()); 
    pvm.alusta(2,13,2012); assertEquals("From: Pvm line: 55", "1.3.2012", pvm.toString()); 
    pvm.alusta(28,2,2012); assertEquals("From: Pvm line: 56", "28.2.2012", pvm.toString()); 
    pvm.alusta(29,2,2011); assertEquals("From: Pvm line: 57", "28.2.2012", pvm.toString()); 
    pvm.alusta(29,2,2012); assertEquals("From: Pvm line: 58", "29.2.2012", pvm.toString()); 
    pvm.alusta(31,3,2012); assertEquals("From: Pvm line: 59", "31.3.2012", pvm.toString()); 
    pvm.alusta(31,4,2012); assertEquals("From: Pvm line: 60", "31.3.2012", pvm.toString()); 
    pvm.alusta( 0,2,2012); assertEquals("From: Pvm line: 61", "31.3.2012", pvm.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAlustaYnnaten95 */
  @Test
  public void testAlustaYnnaten95() {    // Pvm: 95
    Pvm pvm = new Pvm(); 
    assertEquals("From: Pvm line: 97", "13.2.2012", pvm.toString()); 
    pvm.alustaYnnaten(30, 0, 0); 
    assertEquals("From: Pvm line: 99", "1.3.2012", pvm.toString()); 
    pvm.alustaYnnaten(30, 2, 2013); 
    assertEquals("From: Pvm line: 101", "2.3.2013", pvm.toString()); 
    pvm.alustaYnnaten(92, 12, 2011);  // 92-31-31-29 <- karkausvuosi
    assertEquals("From: Pvm line: 103", "1.3.2012", pvm.toString()); 
    pvm.alustaYnnaten(92, 24, 2010); 
    assertEquals("From: Pvm line: 105", "1.3.2012", pvm.toString()); 
    pvm.alustaYnnaten(92, 25, 2010);  // 92.1.2012, 92-31-29-31
    assertEquals("From: Pvm line: 107", "1.4.2012", pvm.toString()); 
    pvm.alustaYnnaten(0, -1, -2); 
    assertEquals("From: Pvm line: 109", "1.4.2012", pvm.toString()); 
    pvm.alustaYnnaten(1, 1, 03); 
    assertEquals("From: Pvm line: 111", "1.1.2003", pvm.toString()); 
    pvm.alustaYnnaten(1, 1, 83); 
    assertEquals("From: Pvm line: 113", "1.1.1983", pvm.toString()); 
    pvm.alustaYnnaten(1, 1, 100); 
    assertEquals("From: Pvm line: 115", "1.1.100", pvm.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString196 */
  @Test
  public void testToString196() {    // Pvm: 196
    Pvm tammi2011 = new Pvm(1,1,2011); 
    assertEquals("From: Pvm line: 198", "1.1.2011", tammi2011.toString());
    Pvm helmi2011 = new Pvm(1,2,2011); 
    assertEquals("From: Pvm line: 200", "1.2.2011", helmi2011.toString());
    Pvm tanaan = new Pvm(14,2,2011); 
    assertEquals("From: Pvm line: 202", "14.2.2011", tanaan.toString());
    Pvm maalis97 = new Pvm(1,3,1997); 
    assertEquals("From: Pvm line: 204", "1.3.1997", maalis97.toString());
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse243 */
  @Test
  public void testParse243() {    // Pvm: 243
    Pvm pvm = new Pvm(11,3,2003); 
    pvm.parse("12"); assertEquals("From: Pvm line: 245", "12.3.2003", pvm.toString()); 
    pvm.parse("..2001"); assertEquals("From: Pvm line: 246", "12.3.2001", pvm.toString()); 
    pvm.parse("..2009 14:30"); assertEquals("From: Pvm line: 247", "12.3.2009", pvm.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse262 */
  @Test
  public void testParse262() {    // Pvm: 262
    Pvm pvm = new Pvm(11,3,2003); 
    StringBuilder jono = new StringBuilder("12"); 
    pvm.parse(jono); assertEquals("From: Pvm line: 265", "12.3.2003", pvm.toString()); assertEquals("From: Pvm line: 265", "", jono.toString()); 
    jono = new StringBuilder("..2001"); 
    pvm.parse(jono); assertEquals("From: Pvm line: 267", "12.3.2001", pvm.toString()); assertEquals("From: Pvm line: 267", "", jono.toString()); 
    jono = new StringBuilder("..2009 14:30"); 
    pvm.parse(jono); assertEquals("From: Pvm line: 269", "12.3.2009", pvm.toString()); assertEquals("From: Pvm line: 269", "14:30", jono.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetPv282 */
  @Test
  public void testGetPv282() {    // Pvm: 282
    Pvm pv = new Pvm("14.2.2011"); 
    assertEquals("From: Pvm line: 284", 14, pv.getPv()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetKk295 */
  @Test
  public void testGetKk295() {    // Pvm: 295
    Pvm pv = new Pvm("14.2.2011"); 
    assertEquals("From: Pvm line: 297", 2, pv.getKk()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetVv308 */
  @Test
  public void testGetVv308() {    // Pvm: 308
    Pvm pv = new Pvm("14.2.2011"); 
    assertEquals("From: Pvm line: 310", 2011, pv.getVv()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testCompareTo322 */
  @Test
  public void testCompareTo322() {    // Pvm: 322
    Pvm pv1 = new Pvm(12, 12, 2012), pv2 = new Pvm(20, 1, 2020); 
    assertEquals("From: Pvm line: 324", -1, pv1.compareTo(pv2)); 
    pv1.alusta(21, 1, 2020); 
    assertEquals("From: Pvm line: 326", 1, pv1.compareTo(pv2)); 
    pv2.alusta(21, 1, 2020); 
    assertEquals("From: Pvm line: 328", 0, pv1.compareTo(pv2)); 
    assertEquals("From: Pvm line: 329", 0, pv2.compareTo(pv1));  //Symmetrisyys
    assertEquals("From: Pvm line: 330", 0, pv1.compareTo(pv1));  //Reflektiivisyys
    Pvm pv3 = new Pvm(21, 1, 2020); 
    assertEquals("From: Pvm line: 332", 0, pv2.compareTo(pv3)); 
    assertEquals("From: Pvm line: 333", 0, pv1.compareTo(pv3));  //Transitiivisuus
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testEquals354 */
  @Test
  public void testEquals354() {    // Pvm: 354
    Pvm pv1 = new Pvm(21, 8, 2021), pv2 = new Pvm(21, 8, 2021), pv3 = new Pvm(21, 8, 2021); 
    assertEquals("From: Pvm line: 356", true, pv1.equals(pv1));  //Reflektiivisyys
    assertEquals("From: Pvm line: 357", true, pv1.equals(pv2)); 
    assertEquals("From: Pvm line: 358", true, pv2.equals(pv1));  //Symmetrisyys
    assertEquals("From: Pvm line: 359", true, pv2.equals(pv3)); 
    assertEquals("From: Pvm line: 360", true, pv1.equals(pv3));  //Transitiivisuus
    pv1.alusta(1, 1, 2020); 
    assertEquals("From: Pvm line: 362", false, pv1.equals(pv2)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testCompareTo375 */
  @Test
  public void testCompareTo375() {    // Pvm: 375
    Pvm pv1 = new Pvm(12, 12, 2012), pv2 = new Pvm(20, 1, 2020); 
    assertEquals("From: Pvm line: 377", -1, Pvm.compareTo(pv1, pv2)); 
    pv1.alusta(21, 1, 2020); 
    assertEquals("From: Pvm line: 379", 1, Pvm.compareTo(pv1, pv2)); 
    pv2.alusta(21, 1, 2020); 
    assertEquals("From: Pvm line: 381", 0, Pvm.compareTo(pv1, pv2)); 
    assertEquals("From: Pvm line: 382", 0, Pvm.compareTo(pv2, pv1));  //Symmetrisyys
    assertEquals("From: Pvm line: 383", 0, Pvm.compareTo(pv1, pv1));  //Reflektiivisyys
    Pvm pv3 = new Pvm(21, 1, 2020); 
    assertEquals("From: Pvm line: 385", 0, Pvm.compareTo(pv2, pv3)); 
    assertEquals("From: Pvm line: 386", 0, Pvm.compareTo(pv1, pv3));  //Transitiivisuus
    pv1 = new Pvm(15,6,2013); 
    pv2 = new Pvm(14,5,2014); 
    pv3 = new Pvm(15,7,2014); 
    Pvm pv4 = new Pvm(16,7,2014); 
    Pvm pv5 = new Pvm(16,7,2014); 
    Pvm pv6 = new Pvm(16,7,2012); 
    assertEquals("From: Pvm line: 393", -1, Pvm.compareTo(pv1,pv2));  // ero vuodessa
    assertEquals("From: Pvm line: 394", 1, Pvm.compareTo(pv2,pv1)); 
    assertEquals("From: Pvm line: 395", -1, Pvm.compareTo(pv2,pv3));  // ero kuukaudessa
    assertEquals("From: Pvm line: 396", 1, Pvm.compareTo(pv3,pv2)); 
    assertEquals("From: Pvm line: 397", -1, Pvm.compareTo(pv3,pv4));  // ero p채iv채ss채
    assertEquals("From: Pvm line: 398", 1, Pvm.compareTo(pv4,pv3)); 
    assertEquals("From: Pvm line: 399", 0, Pvm.compareTo(pv4,pv5));  // kaikki samoja
    assertEquals("From: Pvm line: 400", -1, Pvm.compareTo(pv6,pv2));  // ero kuukaudessa, mutta vuodessa toisinp채in
    assertEquals("From: Pvm line: 401", 1, Pvm.compareTo(pv2,pv6)); 
  } // Generated by ComTest END
}